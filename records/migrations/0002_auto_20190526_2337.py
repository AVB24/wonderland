# Generated by Django 2.2.1 on 2019-05-26 23:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('records', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('year', models.DateField()),
                ('color', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'cars',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('external_id', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='RaceClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'raceclasses',
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'tracks',
            },
        ),
        migrations.CreateModel(
            name='Racer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('points', models.IntegerField()),
                ('cars', models.ManyToManyField(to='records.Car')),
                ('sponsors', models.ManyToManyField(to='records.Sponsor')),
            ],
            options={
                'verbose_name_plural': 'racers',
            },
        ),
        migrations.CreateModel(
            name='Lap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.FloatField()),
                ('lap_date', models.DateField(verbose_name='Lap date')),
                ('best', models.BooleanField(verbose_name='Is Best?')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='records.Event')),
                ('raceclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='records.RaceClass')),
                ('racer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='records.Racer')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='records.Track')),
            ],
            options={
                'verbose_name_plural': 'laps',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='tracks',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='records.Track'),
        ),
    ]
